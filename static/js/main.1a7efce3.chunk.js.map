{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","sortType","NONE","isReversed","sortByLength","setState","LENGTH","sortByAlphabetically","ALPHABET","reverse","reset","this","isGoodsListChanged","changedGoodsList","goods","visibleGoods","sort","good1","good2","length","localeCompare","Error","getReorderedGoods","className","type","classNames","onClick","map","listItem","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAmBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA0CE,IAAME,EAAb,4MACEC,MAAyB,CACvBC,SAAUJ,EAASK,KACnBC,YAAY,GAHhB,EAMEC,aAAe,WACb,EAAKC,SAAS,CAAEJ,SAAUJ,EAASS,UAPvC,EAUEC,qBAAuB,WACrB,EAAKF,SAAS,CAAEJ,SAAUJ,EAASW,YAXvC,EAcEC,QAAU,WACR,EAAKJ,UAAS,SAAAL,GAAK,MAAK,CACtBG,YAAaH,EAAMG,gBAhBzB,EAoBEO,MAAQ,WACN,EAAKL,SAAS,CAAEJ,SAAUJ,EAASK,KAAMC,YAAY,KArBzD,4CAwBE,WACE,MAGIQ,KAAKX,MAFPC,EADF,EACEA,SACAE,EAFF,EAEEA,WAGIS,EAAsBX,IAAaJ,EAASK,MAASC,EACrDU,EA9DH,SACLC,EADK,GAGJ,IADCb,EACF,EADEA,SAAUE,EACZ,EADYA,WAENY,EAAY,YAAOD,GAmBzB,OAjBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQjB,GACN,KAAKJ,EAASS,OACZ,OAAOW,EAAME,OAASD,EAAMC,OAC9B,KAAKtB,EAASW,SACZ,OAAOS,EAAMG,cAAcF,GAC7B,KAAKrB,EAASK,KACZ,OAAO,EACT,QACE,MAAM,IAAImB,MAAM,uBAIlBlB,GACFY,EAAaN,UAGRM,EAuCoBO,CAAkBxB,EAAiBa,KAAKX,OAEjE,OACE,sBAAKuB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,iBACA,CAAE,WAAYxB,IAAaJ,EAASW,WAEtCkB,QAASf,KAAKJ,qBANhB,iCAWA,wBACEiB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,WAAYxB,IAAaJ,EAASS,SAEtCoB,QAASf,KAAKP,aANhB,4BAWA,wBACEoB,KAAK,SACLD,UAAWE,IACT,oBACA,CAAE,YAAatB,IAEjBuB,QAASf,KAAKF,QANhB,qBAWCG,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVG,QAASf,KAAKD,MAHhB,sBAUJ,6BACE,6BACGG,EAAiBc,KAAI,SAAAC,GAAQ,OAC5B,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAnFtC,GAAyBC,aC1DzBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a7efce3.chunk.js","sourcesContent":["import { Component } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.NONE:\n        return 0;\n      default:\n        throw new Error('Data type error');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\ninterface State {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport class App extends Component<{}, State> {\n  state: Readonly<State> = {\n    sortType: SortType.NONE,\n    isReversed: false,\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  sortByAlphabetically = () => {\n    this.setState({ sortType: SortType.ALPHABET });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  reset = () => {\n    this.setState({ sortType: SortType.NONE, isReversed: false });\n  };\n\n  render() {\n    const {\n      sortType,\n      isReversed,\n    } = this.state;\n\n    const isGoodsListChanged = (sortType !== SortType.NONE) || isReversed;\n    const changedGoodsList = getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-info',\n              { 'is-light': sortType !== SortType.ALPHABET },\n            )}\n            onClick={this.sortByAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-success',\n              { 'is-light': sortType !== SortType.LENGTH },\n            )}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={classNames(\n              'button is-warning',\n              { 'is-light': !isReversed },\n            )}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {isGoodsListChanged && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.reset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {changedGoodsList.map(listItem => (\n              <li data-cy=\"Good\" key={listItem}>\n                {listItem}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}